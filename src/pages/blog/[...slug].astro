---
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import FormattedDate from "@components/FormattedDate.astro";
import { readingTime } from "@lib/utils";
import BackToPrevious from "@components/BackToPrevious.astro";
import PostNavigation from "@components/PostNavigation.astro";
import TableOfContents from "@components/TableOfContents.astro";
import Giscus from "@components/Giscus.astro";

export async function getStaticPaths() {
  const posts = (await getCollection("blog"))
    .filter((post) => !post.data.draft)
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}
type Props = CollectionEntry<"blog">;

const posts = (await getCollection("blog"))
  .filter((post) => !post.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

function getNextPost() {
  let postIndex;
  for (const post of posts) {
    if (post.slug === Astro.params.slug) {
      postIndex = posts.indexOf(post);
      return posts[postIndex + 1];
    }
  }
}

function getPrevPost() {
  let postIndex;
  for (const post of posts) {
    if (post.slug === Astro.params.slug) {
      postIndex = posts.indexOf(post);
      return posts[postIndex - 1];
    }
  }
}

const nextPost = getNextPost();
const prevPost = getPrevPost();

const post = Astro.props;
const { Content, headings } = await post.render();

// Astro Social Share
import {
  FacebookShareButton,
  TwitterShareButton,
  SocialShare,
} from "astro-social-share";

import MastodonShareButton from "@components/MastodonShare.astro";
import MisskeyShareButton from "@components/MisskeyShare.astro";
import Link from "@components/Link.astro";

const BUTTONS = [
  MastodonShareButton,
  MisskeyShareButton,
  TwitterShareButton,
  FacebookShareButton,
];
---

<Layout title={post.data.title} description={post.data.description}>
  <Container>
    <div class="animate">
      <BackToPrevious href="/blog">blog</BackToPrevious>
    </div>
    <div class="animate my-10 space-y-2">
      <div class="flex items-center gap-1.5">
        <div class="font-base text-sm">
          <FormattedDate date={post.data.date} />
        </div>
        &bull;
        <div class="font-base text-sm">
          {readingTime(post.body)}
        </div>
      </div>
      <h1 class="text-3xl font-semibold text-black dark:text-white">
        {post.data.title}
      </h1>
      <div class="">
        <span class="text-sm">
          {post.data.description}
        </span>
      </div>
      <div class="max-w-md pt-2">
        <ul class="flex flex-wrap items-center gap-x-3 gap-y-2 text-sm">
          {
            post.data.tags.map((tag) => (
              <li>
                <div class="inline-block grayscale">&#127991;</div>
                <Link href={`/tags/${tag}`}>{tag}</Link>
              </li>
            ))
          }
        </ul>
      </div>
    </div>
    {headings.length > 0 && <TableOfContents headings={headings} />}
    <article class="animate">
      <Content />
      <div class="mt-8">
        <SocialShare buttons={BUTTONS} description={post.data.title} />
      </div>
      <div class="mt-8">
        <PostNavigation prevPost={prevPost} nextPost={nextPost} />
      </div>
      <div class="mt-24">
        <Giscus />
      </div>
    </article>
  </Container>
</Layout>
